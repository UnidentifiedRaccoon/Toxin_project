include ../button/button
include ../input/input

//-
    options.mode - "persons"/"rooms" - создает дропдаун с соответствующим содержимым


    Данное решение принято исходя из того, что данные параметры чаще всего остаются неизменными (или редко изменяются)
    options.placeholder - (Не передается в mixin) позволяет задать placeholder
                        для поля dropdown основываясь на options.mode
    options.items - (Не передается в mixin) позволяет задать items
                - элементы поля dropdown основываясь на options.mode

mixin dropdown(options)

    -
        //- Данные
        var personsChoice = ['Взрослые', 'Дети', 'Младенцы']
        var conditionsChoice = ['Спальни', 'Кровати', 'Ванные комнаты']

        var modeClass = 'dropdown' + options.mode
        //- В зависимости от переданных параметров мы выбираем,
        //- какие данные следует использовать
        options.items = (options.mode === 'persons') ? personsChoice : conditionsChoice;
        options.placeholder = (options.mode === 'persons') ? 'Сколько гостей' : 'Сколько комнат'

    .dropdown(class=modeClass)
        +input({
            labelText: 'Гости',
            type: 'text',
            placeholder: options.placeholder,
            mode: "dropdown",
        })(class="dropdown__field" readonly)
        .dropdown__content-box
            ul.dropdown__list
                    - var i = 0;
                    //- Генерация элементов dropdown исходя из элементов options.items
                    each item in options.items
                        li.dropdown__item(data-item=i++)
                            span.dropdown__item-text= item
                            .dropdown__button-box
                                input.dropdown__item-button.dropdown__item-button--decrease(type="button" value="-" disabled)
                                span.dropdown__item-count 0
                                input.dropdown__item-button.dropdown__item-button--increase(type="button" value="+")
            //-  Кнопки принятия и сброса
            .dropdown__bottom-buttons
                .dropdown__button
                    +button({text: 'Очистить', type: 'button'})(class='dropdown__button--reset')
                .dropdown__button
                    +button({text: 'Применить', type: 'button'})(class='dropdown__button--apply')
